AWSTemplateFormatVersion: 2010-09-09
Description: Creating a VPC with 2 pub and 2 priv subnets

Resources:
  karthikeyaVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      Tags:
       - Key: Name
         Value: karthikeyaVPC
 
  karthikeyaSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref karthikeyaVPC
      CidrBlock: 10.0.0.0/24
      AvailabilityZone: "us-east-2b"
      Tags:
      - Key: Name
        Value: karthikeya-pub-sn01
 
  karthikeyaSubnet02:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref karthikeyaVPC
      CidrBlock: 10.0.1.0/24
      AvailabilityZone: "us-east-2b"
      Tags:
       - Key: Name
         Value: karthikeya-pub-sn02      
  
  karthikeyaSubnet03:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref karthikeyaVPC
      CidrBlock: 10.0.2.0/24
      AvailabilityZone: "us-east-2b"
      Tags:
       - Key: Name
         Value: karthikeya-priv-sn01      

  karthikeyaSubnet04:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref karthikeyaVPC
      CidrBlock: 10.0.10.0/24
      AvailabilityZone: "us-east-2b"
      Tags:
       - Key: Name
         Value: karthikeya-priv-sn02      


  karthikeyart01:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:  
        Ref: karthikeyaVPC
      Tags:
      - Key: Name
        Value: karthikeyart01

  karthikeyart02:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:  
        Ref: karthikeyaVPC
      Tags:
      - Key: Name
        Value: karthikeyart02

  subnetassn01:
      Type: AWS::EC2::SubnetRouteTableAssociation
      Properties: 
        RouteTableId: !Ref karthikeyart01
        SubnetId: !Ref karthikeyaSubnet

  subnetassn02:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties: 
      RouteTableId: !Ref karthikeyart01
      SubnetId: !Ref karthikeyaSubnet02
        
  subnetassn03:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties: 
      RouteTableId: !Ref karthikeyart02
      SubnetId: !Ref karthikeyaSubnet03          
           
  subnetassn04:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties: 
      RouteTableId: !Ref karthikeyart02
      SubnetId: !Ref karthikeyaSubnet04

  karthikeyaig01:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
      - Key: Name
        Value: karthikeyaig01

  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
         Ref: karthikeyaVPC
      InternetGatewayId:
         Ref: karthikeyaig01

  karthikeyaNATGateway:
   Type: AWS::EC2::NatGateway
   Properties:
      AllocationId: !GetAtt NATGatewayEIP.AllocationId
      ConnectivityType: public
      SubnetId: !Ref karthikeyaSubnet02
      Tags:
      - Key: Name
        Value: karthikeya-nat

  NATGatewayEIP:
   Type: AWS::EC2::EIP
   Properties:
      Domain: vpc

  RouteNATGateway:
   DependsOn: karthikeyaNATGateway
   Type: AWS::EC2::Route
   Properties:
      RouteTableId: !Ref karthikeyart02
      DestinationCidrBlock: '0.0.0.0/0'
      NatGatewayId: !Ref karthikeyaNATGateway     


  myNetworkAcl01:
      Type: AWS::EC2::NetworkAcl
      Properties:
         VpcId:
           Ref: karthikeyaVPC 
         Tags:
         - Key: Name
           Value: PubACL 

  myNetworkAcl02:
      Type: AWS::EC2::NetworkAcl
      Properties:
         VpcId:
           Ref: karthikeyaVPC
         Tags:
         - Key: Name
           Value: PrivACL


  SubnetNetworkAclAssociation01:
     Type: AWS::EC2::SubnetNetworkAclAssociation
     Properties:
       SubnetId:
         Ref:  karthikeyaSubnet
       NetworkAclId:
         Ref: myNetworkAcl01

  SubnetNetworkAclAssociation02:
     Type: AWS::EC2::SubnetNetworkAclAssociation
     Properties:
       SubnetId:
         Ref:  karthikeyaSubnet02
       NetworkAclId:
         Ref: myNetworkAcl01

  SubnetNetworkAclAssociation03:
     Type: AWS::EC2::SubnetNetworkAclAssociation
     Properties:
       SubnetId:
         Ref:  karthikeyaSubnet03
       NetworkAclId:
         Ref: myNetworkAcl02

  SubnetNetworkAclAssociation04:
     Type: AWS::EC2::SubnetNetworkAclAssociation
     Properties:
       SubnetId:
         Ref:  karthikeyaSubnet04
       NetworkAclId:
         Ref: myNetworkAcl02  



  InboundRule:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
       NetworkAclId:
         Ref: myNetworkAcl01
       RuleNumber: 100
       Protocol: 6
       RuleAction: allow
       CidrBlock: 0.0.0.0/0
       PortRange:
         From: 22
         To: 22
  OutboundRule:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
       NetworkAclId:
         Ref: myNetworkAcl01
       RuleNumber: 100
       Protocol: -1
       Egress: true
       RuleAction: allow
       CidrBlock: 0.0.0.0/0 

  InboundRule1:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
       NetworkAclId:
         Ref: myNetworkAcl02
       RuleNumber: 100
       Protocol: 6
       RuleAction: allow
       CidrBlock: 10.0.1.0/24
       PortRange:
         From: 22
         To: 22
  OutboundRule1:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
       NetworkAclId:
         Ref: myNetworkAcl02
       RuleNumber: 100
       Protocol: -1
       Egress: true
       RuleAction: allow
       CidrBlock: 0.0.0.0/0          